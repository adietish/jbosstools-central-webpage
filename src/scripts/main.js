// Clear Search
// ==========================
var $searchBar   = $('#searchBar'),
    $search      = $('#search'),
    $clearSearch = $('#clearSearch'),
    $results     = $('#results'),
    $homeDiv     = $('#home'),
    //blacklist of quickstarts that can not be imported in JBT/JBDS
    blacklist    = ['h2-console', 'kitchensink-cordova-contacts', 'kitchensink-cordova', 'push-helloworld-cordova'],
    results      = [],
    wizards = [{"id":"html5.wizard","label":"HTML5 Project","description":"HTML 5 Project is a sample, deployable Maven 3 project to help you get started developing a Mobile HTML5 web application on JBoss Enterprise Application Platform 6 or JBoss Application Server 7.1.\n This project creates a pure HTML5 based front end which interacts with server side content through RESTful endpoints.","iconUrl":"images/icon-html5.png",},{"id":"openshift.wizard","label":"OpenShift Application","description":"Create any kind of application and deploy it in the cloud using OpenShift from Red Hat.","iconUrl":"images/icon-openshift.gif",},{"id":"forge.wizard","label":"AngularJS Forge","description":"This project is a sample project that will show how to build an JavaEE application with AngularJS, HTML5 and Bootstrap 3 by using JBoss Forge. \nThe application is deployable to JBoss Enterprise Platform 6 or JBoss Application Server 7.1 or higher.","iconUrl":"images/icon-default.png",},{"id":"javaee.wizard","label":"Java EE Web Project","description":"Java EE Web Project is a sample, deployable Maven 3 project to help you get your foot in the door developing with Java EE 6 on JBoss Enterprise Application Platform 6 or JBoss Application Server 7.1. \nThis project is setup to allow you to create a compliant Java EE 6 application using JSF 2.0, CDI 1.0, EJB 3.1, JPA 2.0 and Bean Validation 1.0.","iconUrl":"images/icon-javaee.gif",},{"id":"maven.wizard","label":"Maven Project","description":"Create a Maven-based project.","iconUrl":"images/icon-default.png",},{"id":"hybrid.mobile.wizard","label":"Hybrid Mobile Project","description":"Create a hybrid mobile application using Apache Cordova for cross-platform mobile development.","iconUrl":"images/icon-hybridmobile.gif",}]
    ;


var searchResults = [{"id":"jbossdeveloper_quickstart-d2f65af3","label":"ejb-asynchronous","title":"ejb-asynchronous: EJB with asynchronous methods","description":"The `ejb-asynchronous` quickstart demonstrates the behavior of asynchronous EJB invocations by a deployed EJB and a remote client and how to handle errors.",},{"id":"jbossdeveloper_quickstart-fdec999a","label":"kitchensink-ml-ear","title":"kitchensink-ml-ear: Localized Version of the kitchensink-ear Quickstart","description":"The `kitchensink-ml-ear` quickstart demonstrates a localized database application, using JSF, CDI, EJB, JPA and Bean Validation, packaged as an EAR.",},{"id":"jbossdeveloper_quickstart-f04f101b","label":"cdi-veto","title":"cdi-veto: A Simple CDI Portable Extension Example","description":"The `cdi-veto` quickstart is a simple CDI Portable Extension that uses SPI classes to show how to remove beans and inject JPA entities into an application.",},{"id":"jbossdeveloper_quickstart-cf8f65ad","label":"bean-validation","title":"bean-validation: Bean Validation Tested Using Arquillian","description":"The `bean-validation` quickstart provides Arquillian tests to demonstrate how to use CDI 1.0, JPA 2.0 and Bean Validation 1.0.",},{"id":"jbossdeveloper_quickstart-55d9a642","label":"cluster-ha-singleton","title":"cluster-ha-singleton: A SingletonService Started by a SingletonStartup","description":"The `cluster-ha-singleton` quickstart deploys a Service, wrapped with the SingletonService decorator, and used as a cluster-wide singleton service.",},{"id":"jbossdeveloper_quickstart-c3acf4be","label":"temperature-converter","title":"temperature-converter: Stateless Session EJB (SLSB)","description":"The `temperature-converter` quickstart does temperature conversion using an *EJB 3.1 Stateless Session Bean* (SLSB), *CDI*, and a *JSF* front-end client.",},{"id":"jbossdeveloper_quickstart-63c4c140","label":"wsba-coordinator-completion-simple","title":"wsba-coordinator-completion-simple: Example of a WS-BA Enabled JAX-WS Web Service","description":"The `wsba-coordinator-completion-simple` quickstart deploys a WS-BA (WS Business Activity) enabled JAX-WS Web service WAR (CoordinatorCompletion protocol).",},{"id":"jbossdeveloper_quickstart-d12ad3ab","label":"xml-dom4j","title":"xml-dom4j: Use a 3rd Party XML Parsing Library","description":"The `xml-dom4j` quickstart demonstrates how to use Servlet and JSF to upload an XML file to JBoss EAP and parse it using a 3rd party XML parsing library.",},{"id":"jbossdeveloper_quickstart-16103d82","label":"wsba-participant-completion-simple","title":"wsba-participant-completion-simple: Deployment of a WS-BA enabled JAX-WS Web Service","description":"The `wsba-participant-completion-simple` quickstart deploys a WS-BA (WS Business Activity) enabled JAX-WS Web service WAR (ParticipantCompletion Protocol).",},{"id":"jbossdeveloper_quickstart-976a0abd","label":"log4j","title":"log4j: Define a Module Dependency and Use log4j in an Application","description":"The `log4j` quickstart demonstrates how to use container defined modules to add dependencies on 3rd party libraries and limit the application package size.",},{"id":"jbossdeveloper_quickstart-736ab533","label":"cdi-stereotype","title":"cdi-stereotype: Example Using CDI Stereotype.","description":"The `cdi-stereotype` quickstart demonstrates how to apply CDI stereotypes to beans to encapsulate CDI interceptor bindings and CDI alternatives.",},{"id":"jbossdeveloper_quickstart-61ea7eff","label":"websocket-hello","title":"jboss-websocket-hello: A simple WebSocket application","description":"The `websocket-hello` quickstart demonstrates how to create a simple WebSocket application.",},{"id":"jbossdeveloper_quickstart-98b12a88","label":"kitchensink-jsp","title":"kitchensink-jsp: Kitchensink with a JSP (JavaServer Pages) Front End","description":"The `kitchensink-jsp` quickstart demonstrates how to use JSP, JSTL, CDI, EJB, JPA, and Bean Validation in JBoss EAP.",},{"id":"jbossdeveloper_quickstart-07732849","label":"ejb-throws-exception","title":"ejb-throws-exception: Handle Exceptions across JARs in an EAR","description":"The `ejb-throws-exception` quickstart demonstrates how to throw and handle Exceptions across JARs in an EAR.",},{"id":"jbossdeveloper_quickstart-63634d05","label":"logging","title":"logging: Example That Sets Up Different Logging Levels","description":"The `logging` quickstart demonstrates how to configure different logging levels in JBoss EAP. It also includes an asynchronous logging example.",},{"id":"jbossdeveloper_quickstart-e927771a","label":"h2-console","title":"h2-console: Example Using the H2 Console with JBoss EAP","description":"The `h2-console` quickstart demonstrates how to use the H2 Console that is bundled with and built specifically for JBoss EAP.",},{"id":"jbossdeveloper_quickstart-05dc10e8","label":"kitchensink-ml","title":"kitchensink-ml: Localized Version of the kitchensink Quickstart","description":"The `kitchensink-ml` quickstart demonstrates a localized Java EE 6 compliant application using JSF, CDI, EJB, JPA and Bean Validation.",},{"id":"jbossdeveloper_quickstart-8c871579","label":"kitchensink-ear","title":"kitchensink-ear: Using Multiple Java EE 6 Technologies Deployed as an EAR","description":"The `kitchensink-ear` quickstart demonstrates web-enabled database application, using JSF, CDI, EJB, JPA and Bean Validation, packaged as an EAR.",},{"id":"jbossdeveloper_quickstart-30255298","label":"cdi-alternative","title":"cdi-alternative: Demonstrates CDI Alternatives","description":"The `cdi-alternative` quickstart demonstrates how to create a bean that can be implemented for different purposes without changing the source code.",},{"id":"jbossdeveloper_quickstart-e7abf822","label":"app-client","title":"app-client: Use the JBoss EAP Application Client Container","description":"The `app-client` quickstart demonstrates how to code and package a client app and use the JBoss EAP client container to start the client Main program.",},{"id":"jbossdeveloper_quickstart-e0f66336","label":"bean-validation-custom-constraint","title":"bean-validation-custom-constraint: Bean Validation Using Custom Constraints","description":"The `bean-validation-custom-constraint` quickstart demonstrates how to use the Bean Validation API to define custom constraints and validators.",},{"id":"jbossdeveloper_quickstart-6af0aa62","label":"ejb-timer","title":"ejb-timer: Example of EJB Timer Service - @Schedule and @Timeout","description":"The `ejb-timer` quickstart demonstrates how to use the EJB 3.1 timer service `@Schedule` and `@Timeout` annotations with JBoss EAP.",},{"id":"jbossdeveloper_quickstart-0eb538cc","label":"cdi-portable-extension","title":"cdi-portable-extension: CDI Portable Extension","description":"The `cdi-portable-extension` quickstart demonstrates a simple CDI Portable Extension that uses SPI classes to inject beans with data from an XML file.",},{"id":"jbossdeveloper_quickstart-d66221c3","label":"xml-jaxp","title":"xml-jaxp: Upload and Parse an XML File Using DOM or SAX","description":"The `xml-jaxp` quickstart demonstrates how to use Servlet and JSF to upload an XML file to JBoss EAP and validate and parse it using DOM or SAX.",},{"id":"jbossdeveloper_quickstart-09f74407","label":"forge-from-scratch","title":"forge-from-scratch: Shows How Forge Can Generate an Application","description":"The `forge-from-scratch` quickstart demonstrates how *JBoss Forge 2* can generate a Java EE (JPA, EJB 3.1, JAX-RS, JSF) web-enabled database application.",},{"id":"jbossdeveloper_quickstart-7abbd519","label":"tasks","title":"tasks: Test JPA with Arquillian","description":"The `tasks` quickstart includes a persistence unit and sample persistence code to demonstrates how to use JPA 2.0 for database access in JBoss EAP.",},{"id":"jbossdeveloper_quickstart-c4b63524","label":"mail","title":"mail: E-Mail Example using CDI and JSF","description":"The `mail` quickstart demonstrates how to send email using CDI 1.0 and JSF 2.1 and the default Mail provider that ships with JBoss EAP.",},{"id":"jbossdeveloper_quickstart-7aa80b86","label":"ejb-security","title":"ejb-security:  Using Java EE Declarative Security to Control Access","description":"The `ejb-security` quickstart demonstrates the use of Java EE declarative security to control access to Servlets and EJBs in JBoss EAP.",},{"id":"jbossdeveloper_quickstart-5f6f6254","label":"jts","title":"jts: Java Transaction Service - Distributed EJB Transactions","description":"The `jts` quickstart shows how to use JTS to perform distributed transactions across multiple containers, fulfilling the properties of an ACID transaction.",},{"id":"jbossdeveloper_quickstart-9a356589","label":"bmt","title":"bmt: Bean Managed Transactions with JPA and JTA","description":"The `bmt` quickstart demonstrates Bean-Managed Transactions (BMT), showing how to manually manage transaction demarcation while accessing JPA entities.",},{"id":"jbossdeveloper_quickstart-2eb1d12a","label":"helloworld-mdb","title":"helloworld-mdb: Helloworld Using an MDB (Message-Driven Bean)","description":"The `helloworld-mdb` quickstart uses *JMS 1.1* and *EJB 3.1 Message-Driven Bean* (MDB) to create and deploy JMS topic and queue resources in JBoss EAP.",},{"id":"jbossdeveloper_quickstart-7d1094da","label":"ejb-in-ear","title":"ejb-in-ear: Deployment of an EAR Containing a JSF WAR and EJB JAR","description":"The `ejb-in-ear` quickstart demonstrates how to deploy an EAR archive that contains a *JSF 2.1* WAR and an *EJB 3.1* JAR.",},{"id":"jbossdeveloper_quickstart-3f82586e","label":"cdi-interceptors","title":"cdi-interceptors: Example Using CDI Interceptors","description":"The `cdi-interceptors` quickstart demonstrates how to use CDI interceptors for cross-cutting concerns such as logging and simple auditing.",},{"id":"jbossdeveloper_quickstart-19735541","label":"inter-app","title":"inter-app: Communicate Between Two Applications Using EJB and CDI","description":"The `inter-app` quickstart shows you how to use a shared API JAR and an EJB to provide inter-application communication between two WAR deployments.",},{"id":"jbossdeveloper_quickstart-c07fd3a1","label":"helloworld-jms","title":"helloworld-jms: Helloworld JMS Example","description":"The `helloworld-jms` quickstart demonstrates the use of external JMS clients with JBoss EAP.",},{"id":"jbossdeveloper_quickstart-bdf3bbb8","label":"cmt","title":"cmt: Container Managed Transactions (CMT)","description":"The `cmt` quickstart demonstrates Container-Managed Transactions (CMT), showing how to use transactions managed by the container.",},{"id":"jbossdeveloper_quickstart-941f8005","label":"servlet-security","title":"servlet-security:  Using Java EE Declarative Security to Control Servlet Access","description":"The `servlet-security` quickstart demonstrates the use of Java EE declarative security to control access to Servlets and Security in JBoss EAP.",},{"id":"jbossdeveloper_quickstart-8bc46068","label":"greeter","title":"greeter: Demonstrates CDI, JPA, JTA, EJB 3.1, and JSF","description":"The `greeter` quickstart demonstrates the use of *CDI 1.0*, *JPA 2.0*, *JTA 1.1*, *EJB 3.1* and *JSF 2.1* in JBoss EAP.",},{"id":"jbossdeveloper_quickstart-ec93e82e","label":"numberguess","title":"numberguess: Example Using CDI and JSF","description":"The `numberguess` quickstart demonstrates the use of *CDI 1.0*  (Contexts and Dependency Injection) and *JSF 2.1* (JavaServer Faces) in JBoss EAP.",},{"id":"jbossdeveloper_quickstart-11a4307c","label":"helloworld-mdb-propertysubstitution","title":"helloworld-mdb-propertysubstitution: MDB (Message-Driven Bean) Using Property Substitution","description":"The `helloworld-mdb-propertysubstitution` quickstart demonstrates the use of *JMS 1.1* and *EJB 3.1 MDB*, enabling property substitution with annotations.",},{"id":"jbossdeveloper_quickstart-7111d39d","label":"ejb-security-interceptors","title":"ejb-security-interceptors: Use Interceptors to Switch Identities for an EJB Call","description":"The `ejb-security-interceptors` quickstart demonstrates how to use client and server side interceptors to switch the identity for an EJB call.",},{"id":"jbossdeveloper_quickstart-7f47d88e","label":"ejb-timer","title":"ejb-timer: EJB Timers example - @Schedule and @Timeout","description":"Demonstrates how to use EJB 3.1 Timer (@Schedule and @Timeout) with JBoss EAP.",},{"id":"jbossdeveloper_quickstart-8ad76c14","label":"servlet-filterlistener","title":"servlet-filterlistener: How to Write Servlet Filters and Listeners","description":"Demonstrates Servlet filters and listeners",},{"id":"jbossdeveloper_quickstart-21a9ff5d","label":"mail","title":"mail: E-Mail Example using CDI (Contexts and Dependency Injection) and JSF (JavaServer Faces)","description":"Demonstrates the use of JavaMail",},{"id":"jbossdeveloper_quickstart-e5681d02","label":"ejb-in-war","title":"ejb-in-war: Deployment of a WAR Containing an EJB","description":"Packages an EJB JAR in a WAR",},{"id":"jbossdeveloper_quickstart-93bbd8ce","label":"helloworld-mbean","title":"helloworld-mbean: Helloworld Using MBean and CDI component","description":"Demonstrates the use of CDI 1.0 and MBean",},{"id":"jbossdeveloper_quickstart-1bd23222","label":"kitchensink-ml","title":"kitchensink-ml: Localized application using an assortment of technologies including Arquillian","description":"A localized version of kitchensink",},{"id":"jbossdeveloper_quickstart-669278e2","label":"xml-jaxp","title":"xml-jaxp: Demonstrates How to Upload and Parse an XML File Using DOM or SAX","description":"Upload, validation and parsing of XML using SAX or DOM",},{"id":"jbossdeveloper_quickstart-08796f6c","label":"cdi-alternative","title":"cdi-alternative: Demostrates CDI Alternatives","description":"Demonstrates the use of CDI Alternatives where the bean is selected during deployment",},{"id":"jbossdeveloper_quickstart-771f4264","label":"cdi-interceptors","title":"cdi-interceptors: Example Using CDI-interceptors","description":"Demonstrates using cdi-interceptors for logging and auditing",},{"id":"jbossdeveloper_quickstart-8b59ea1e","label":"tasks-rs","title":"tasks-rs: JAX-RS, JPA quickstart","description":"Demonstrates how to use JAX-RS and JPA together",},{"id":"jbossdeveloper_quickstart-b7dd63d4","label":"ejb-asynchronous","title":"ejb-asynchronous:  An application with an EJB with asynchronous methods to demonstrate how it works","description":"Demonstrates asynchronous EJB invocations.",},{"id":"jbossdeveloper_quickstart-f729b7e7","label":"kitchensink","title":"kitchensink: Assortment of technologies including Arquillian","description":"An example that incorporates multiple technologies",},{"id":"jbossdeveloper_quickstart-85d604ef","label":"payment-cdi-event","title":"payment-cdi-event: Use CDI Events to Process Debit and Credit Operations","description":"Demonstrates how to use CDI 1.0 Events",},{"id":"jbossdeveloper_quickstart-bf85ca63","label":"ejb-in-ear","title":"ejb-in-ear: Deployment of an EAR Containing a JSF WAR and an EJB JAR","description":"Packages an EJB JAR and WAR in an EAR",},{"id":"jbossdeveloper_quickstart-fb95458c","label":"logging-tools","title":"jboss-logging-tools: Internationalization and Localization with JBoss Logging Tools","description":"Demonstrates the use of JBoss Logging Tools to create internationalized loggers, exceptions, and generic messages",},{"id":"jbossdeveloper_quickstart-1d282516","label":"kitchensink-ml-ear","title":"kitchensink-ml-ear: Localized Example Using Multiple Java EE 6 Technologies Deployed as an EAR","description":"A localized version of kitchensink-ear",},{"id":"jbossdeveloper_quickstart-7db17b36","label":"kitchensink-ear","title":"kitchensink-ear: Example Using Multiple Java EE 6 Technologies Deployed as an EAR","description":"Based on kitchensink, but deployed as an EAR",},{"id":"jbossdeveloper_quickstart-7bd73460","label":"cluster-ha-singleton","title":"cluster-ha-singleton: A SingletonService deployed in a JAR started by SingletonStartup and accessed by an EJB","description":"A SingletonService deployed in a JAR started by SingletonStartup and accessed by an EJB",},{"id":"jbossdeveloper_quickstart-56cd27e9","label":"ejb-multi-server","title":"ejb-multi-server: EJB Communication Across Servers","description":"EJB applications deployed to different servers that communicate via EJB remote calls",},{"id":"jbossdeveloper_quickstart-25b66e05","label":"tasks","title":"tasks: Testing JPA with Arquillian","description":"Demonstrates testing JPA using Arquillian",},{"id":"jbossdeveloper_quickstart-7ba752fe","label":"greeter","title":"greeter: Greeter Example","description":"Demonstrates the use of CDI 1.0, JPA 2.0, JTA 1.1, EJB 3.1 and JSF 2.0",},{"id":"jbossdeveloper_quickstart-03146fef","label":"jts-distributed-crash-rec","title":"jts-distributed-crash-rec: JTS and distributed crash recovery","description":"Demonstrates recovery of distributed crashed components",},{"id":"jbossdeveloper_quickstart-0e71b4fd","label":"helloworld-mdb","title":"helloworld-mdb: Helloword Using an MDB (Message-Driven Bean)","description":"Demonstrates the use of JMS 1.1 and EJB 3.1 Message-Driven Bean",},{"id":"jbossdeveloper_quickstart-9dbb008a","label":"forge-from-scratch","title":"forge-from-scratch: Example Showing How Forge Can Generate an Application From Scratch","description":"Demonstrates how to generate a fully Java EE compliant project using nothing but JBoss Forge",},{"id":"jbossdeveloper_quickstart-15f008ad","label":"ejb-remote","title":"ejb-remote: Remote EJB Client Example","description":"Shows how to access an EJB from a remote Java client program using JNDI",},{"id":"jbossdeveloper_quickstart-391cea21","label":"helloworld-rs","title":"helloworld-rs: Helloworld Using JAX-RS (Java API for RESTful Web Services)","description":"Demonstrates the use of CDI 1.0 and JAX-RS",},{"id":"jbossdeveloper_quickstart-9a4781e0","label":"hornetq-clustering","title":"hornetq-clustering: HornetQ Demonstrating using Clustering","description":"Demonstrates the use of HornetQ Clustering",},{"id":"jbossdeveloper_quickstart-f2332117","label":"cdi-veto","title":"cdi-veto: An example of a Portable Extension and some of the APIs / SPIs of CDI to veto beans.","description":"Creating a basic CDI extension to demonstrate vetoing beans.",},{"id":"jbossdeveloper_quickstart-641ffd79","label":"tasks-jsf","title":"tasks-jsf: JSF, JPA quickstart","description":"Provides a JSF 2.0 as view layer for the `tasks` quickstart",},{"id":"jbossdeveloper_quickstart-ddf537a9","label":"h2-console","title":"h2-console: Example Using the H2 Console with JBoss","description":"Shows how to use the H2 console with JBoss EAP",},{"id":"jbossdeveloper_quickstart-4f9bca02","label":"bmt","title":"bmt: Bean Managed Transactions - Stepping Outside the Container (with JPA and JTA)","description":"EJB that demonstrates bean-managed transactions (BMT)",},{"id":"jbossdeveloper_quickstart-ee375c3b","label":"cdi-portable-extension","title":"cdi-portable-extension: An example of a Portable Extension and some of the APIs / SPIs of CDI","description":"Creating a basic CDI extension to provide injection of fields from an XML file.",},{"id":"jbossdeveloper_quickstart-a7a5862b","label":"shopping-cart","title":"shopping-cart: EJB 3.1 Stateful Session Bean (SFSB) Example","description":"Demonstrates a stateful session bean",},{"id":"jbossdeveloper_quickstart-127d19fa","label":"jax-rs-client","title":"jax-rs-client: External JAX-RS Client","description":"Demonstrates the use an external JAX-RS RestEasy client which interacts with a JAX-RS Web service that uses CDI 1.0 and JAX-RS",},{"id":"jbossdeveloper_quickstart-7e2b28ae","label":"bean-validation","title":"bean-validation: Bean Validation via Arquillian Example","description":"Shows how to use Arquillian to test Bean Validation",},{"id":"jbossdeveloper_quickstart-1ceead66","label":"servlet-async","title":"servlet-async: How to Write an Asynchronous Servlet","description":"Demonstrates CDI, plus asynchronous Servlets and EJBs",},{"id":"jbossdeveloper_quickstart-d114fcd6","label":"hibernate4","title":"hibernate4: How to Use Hibernate 4 in an Application","description":"This quickstart performs the same functions as the _hibernate3_ quickstart, but uses Hibernate 4 for database access. Compare this quickstart to the _hibernate3_ quickstart to see the changes needed to run with Hibernate 4.",},{"id":"jbossdeveloper_quickstart-fbddcf26","label":"ejb-security","title":"ejb-security:  Using Java EE Declarative Security to Control Access to EJB 3","description":"Shows how to use Java EE Declarative Security to Control Access to EJB 3",},{"id":"jbossdeveloper_quickstart-b9f044e6","label":"jts","title":"jts: Java Transaction Service - Distributed EJB Transactions Across Multiple Containers","description":"Uses Java Transaction Service (JTS) to coordinate distributed transactions",},{"id":"jbossdeveloper_quickstart-c6ae90a2","label":"picketlink-sts","title":"picketlink-sts: PicketLink Federation: WS-Trust Security Token Service","description":"This project is an implementation of a WS-Trust Security Token Service.",},{"id":"jbossdeveloper_quickstart-9787b786","label":"wsat-simple","title":"wsat-simple: WS-AT (WS-AtomicTransaction) - Simple","description":"Deployment of a WS-AT (WS-AtomicTransaction) enabled JAX-WS Web service bundled in a WAR archive",},{"id":"jbossdeveloper_quickstart-649b58d9","label":"jta-crash-rec","title":"jta-crash-rec: Example of JTA Crash Recovery","description":"Uses Java Transaction API and JBoss Transactions to demonstrate recovery of a crashed transaction",},{"id":"jbossdeveloper_quickstart-ce22b9e6","label":"cdi-stereotype","title":"cdi-stereotype: Example Using CDI-stereotype.","description":"Demonstrates using cdi-stereotype for logging and auditing",},{"id":"jbossdeveloper_quickstart-03c99f54","label":"inter-app","title":"inter-app: Shows how to communicate between two applications using EJB and CDI","description":"Shows how to communicate between two applications using EJB and CDI",},{"id":"jbossdeveloper_quickstart-108ecbc0","label":"log4j","title":"log4j: How to Define a Module Dependency and Use log4j in an Application","description":"Demonstrates how to use modules to control class loading for 3rd party logging frameworks",},{"id":"jbossdeveloper_quickstart-15b1fc59","label":"temperature-converter","title":"temperature-converter: Stateless Session EJB","description":"Demonstrates a stateless session bean",},{"id":"jbossdeveloper_quickstart-6a9d2f6d","label":"servlet-security","title":"servlet-security:  Using Java EE Declarative Security to Control Access to Servlet 3","description":"Demonstrates how to use Java EE declarative security to control access to Servlet 3",},{"id":"jbossdeveloper_quickstart-e143aa60","label":"wsba-coordinator-completion-simple","title":"wsba-coordinator-completion-simple: Example of a WS-BA (WS Business Activity) Enabled JAX-WS Web Service","description":"Deployment of a WS-BA (WS-BusinessActivity) enabled JAX-WS Web service bundled in a WAR archive (Participant Completion protocol)",},{"id":"jbossdeveloper_quickstart-284ea453","label":"helloworld-singleton","title":"helloworld-singleton: Helloworld Using a Singleton EJB","description":"Demonstrates the use of an EJB 3.1 Singleton Session Bean, instantiated once, maintaining state for the life of the session",},{"id":"jbossdeveloper_quickstart-84fb099c","label":"ejb-security-interceptors","title":"ejb-security-interceptors:  Using client and server side interceptors to switch the identity for an EJB call.","description":"Demonstrates how interceptors can be used to switch the identity for EJB calls on a call by call basis.",},{"id":"jbossdeveloper_quickstart-39eaac4e","label":"ejb-throws-exception","title":"ejb-throws-exception: Deployment of an EAR Containing a JSF WAR and an EJB JAR that throws a custom exception","description":"Shows how to handle Exceptions across JARs in an EAR",},{"id":"jbossdeveloper_quickstart-052297af","label":"kitchensink-jsp","title":"kitchensink-jsp: Example Using Multiple Java EE 6 Technologies with a JSP (JavaServer Pages) Front End","description":"Based on kitchensink, but uses a JSP for the user interface",},{"id":"jbossdeveloper_quickstart-49aad3c5","label":"helloworld-ws","title":"helloworld-ws: Hello World JAX-WS Web Service","description":"Deployment of a basic JAX-WS Web service bundled in a WAR archive",},{"id":"jbossdeveloper_quickstart-8ec1eb97","label":"logging","title":"Logging Example: Example application that sets up different logging levels","description":"Demonstrates how to set various application logging levels",},{"id":"jbossdeveloper_quickstart-6853f5c0","label":"helloworld","title":"helloworld: Helloworld Example","description":"Basic example that can be used to verify that the server is configured and running correctly",},{"id":"jbossdeveloper_quickstart-2d357e9d","label":"helloworld-jms","title":"helloworld-jms: HelloWorld JMS Example","description":"Demonstrates the use of a standalone (Java SE) JMS client",},{"id":"jbossdeveloper_quickstart-6d3b86a6","label":"cdi-injection","title":"cdi-injection: Example Using CDI (Contexts and Dependency Injection)","description":"Demonstrates the use of CDI 1.0 Injection and Qualifiers with JSF as the front-end client.",},{"id":"jbossdeveloper_quickstart-eca5cc65","label":"wsba-participant-completion-simple","title":"wsba-participant-completion-simple: Deployment of a WS-BA (WS Business Activity) - Participant Completion","description":"Deployment of a WS-BA (WS-BusinessActivity) enabled JAX-WS Web service bundled in a war archive (Coordinator Completion protocol)",},{"id":"jbossdeveloper_quickstart-b7c0d380","label":"cmt","title":"cmt: Container Managed Transactions - Example Using Transactions That Are Managed by the Container","description":"EJB that demonstrates container-managed transactions (CMT)",},{"id":"jbossdeveloper_quickstart-2c6ec410","label":"hibernate3","title":"hibernate3: How to Use  Hibernate 3 in an Application","description":"Example that uses Hibernate 3 for database access. Compare the code in this quickstart to the _hibernate4_ quickstart to see the changes needed to upgrade to Hibernate 4.",},{"id":"jbossdeveloper_quickstart-967358ac","label":"cdi-decorator","title":"cdi-decorator: Demostrates CDI Decorator","description":"Demonstrates the use of CDI Decorator where the bean is can be decorated.",},{"id":"jbossdeveloper_quickstart-92569695","label":"xml-dom4j","title":"xml-dom4j: How to Upload and Parse an XML File Using a 3rd Party XML Parsing Library","description":"Demonstrates how to upload an XML file and parse it using 3rd party XML parsing libraries",},{"id":"jbossdeveloper_quickstart-51103b7c","label":"numberguess","title":"numberguess: Example Using CDI (Contexts and Dependency Injection) and JSF (JavaServer Faces)","description":"Demonstrates the use of CDI 1.0 and JSF 2.0",},{"id":"jbossdeveloper_quickstart-102c04fb","label":"rapid-stock-market","title":"rapid-stock-market: Compatibility Mode example with HotRod and REST","description":"Shows how to enable Infinispan compatibility mode so that data can be read/written over different protocols.",},{"id":"jbossdeveloper_quickstart-0e5e2d43","label":"carmart-tx","title":"carmart-tx: Basic Infinispan example with transactions","description":"Shows how to use Infinispan instead of a relational database with transactions enabled.",},{"id":"jbossdeveloper_quickstart-a6154d04","label":"hotrod-endpoint","title":"hotrod-endpoint: Use JDG remotely through Hotrod","description":"Demonstrates how to use Infinispan remotely using the Hot Rod protocol.",},{"id":"jbossdeveloper_quickstart-a7514998","label":"helloworld-bpmsuite","title":"helloworld-bpmsuite: A Basic BPM Suite example","description":"Shows how to run a Process that was defined on a JBoss BPM Suite server",},{"id":"jbossdeveloper_quickstart-f575f809","label":"store-brms","title":"store-brms: A Store BRMS example","description":"Shows how to use a KModule from a BRMS server with functions, globals and DSL",},{"id":"jbossdeveloper_quickstart-6f1ae976","label":"helloworld-drl","title":"helloworld-drl: BRMS Basic DRL example","description":"Shows how to use Drools 6",},{"id":"jbossdeveloper_quickstart-40755559","label":"stateful-ksession","title":"stateful-ksession: Stateful Kie Session Quickstart","description":"This Quickstart shows how to use Stateful Kie Session",},{"id":"jbossdeveloper_quickstart-0487c85b","label":"decision-table","title":"decision-table: Insurance company prices using Decision Tables","description":"Shows how to use Decision Tables from a BRMS server",},{"id":"jbossdeveloper_quickstart-faa609ae","label":"memcached-endpoint","title":"memcached-endpoint: Use JDG remotely through MemCached","description":"Demonstrates how to use Infinispan remotely using the Memcached protocol.",},{"id":"jbossdeveloper_quickstart-07259c26","label":"helloworld-brms","title":"helloworld-brms: A Basic BRMS example","description":"Shows how to use a KModule from a BRMS server",},{"id":"jbossdeveloper_quickstart-25632ac9","label":"business-resource-planner","title":"business-resource-planner: Shows how to solve a vehicle routing problem","description":"This Quickstarts shows how to solve a vehicle routing problem",},{"id":"jbossdeveloper_quickstart-05583568","label":"tasks-bpmsuite","title":"tasks-bpmsuite: A BPM Suite example with User Tasks","description":"Shows how to run a Process with user tasks that was defined on a JBoss BPM Suite server",},{"id":"jbossdeveloper_quickstart-e14a4751","label":"helloworld-cep","title":"helloworld-cep: A Complex Event Processing Hello World","description":"This Quickstart shows a basic example for CEP",},{"id":"jbossdeveloper_quickstart-9c541357","label":"picketlink-authentication-facebook","title":"picketlink-authentication-facebook: PicketLink Authentication with Facebook login","description":"Basic example that demonstrates facebook authentication using PicketLink",},{"id":"jbossdeveloper_quickstart-e64d2f19","label":"picketlink-federation-saml-idp-basic","title":"picketlink-federation-saml-idp-basic: PicketLink Identity Provider With a Basic Configuration","description":"Basic example that demonstrates how to setup an application as a SAML v2.0 Identity Provider.",},{"id":"jbossdeveloper_quickstart-dbfcb33e","label":"picketlink-federation-saml-sp-post-with-signature","title":"picketlink-federation-saml-sp-post-with-signature: PicketLink Service Provider With a Basic Configuration using SAML HTTP POST Binding With Signature Support","description":"Basic example that demonstrates how to setup an application as a SAML v2.0 Service Provider using SAML HTTP POST Binding with Signature Support.",},{"id":"jbossdeveloper_quickstart-f6d94b61","label":"picketlink-angularjs-rest","title":"picketlink-angularjs-rest: PicketLink AngularJS and REST Security","description":"Demonstrates how to use PicketLink and Angular.js to secure a RESTful (JAX-RS) JEE application.",},{"id":"jbossdeveloper_quickstart-69dcbe83","label":"picketlink-federation-saml-idp-with-encryption","title":"picketlink-federation-saml-idp-with-encryption: PicketLink Identity Provider With Encryption","description":"Basic example that demonstrates how to setup an application as a SAML v2.0 Identity Provider With Encryption.",},{"id":"jbossdeveloper_quickstart-bb59a6fa","label":"picketlink-federation-saml-idp-terms","title":"picketlink-federation-saml-idp-terms: PicketLink Identity Provider Using a Servlet Filter and a Terms of Service Page","description":"Basic example that demonstrates how to setup an application as a SAML v2.0 Identity Provider Using a Servlet Filter. After authentication at the Identity Provider, the user is presented a Terms of Service page where he/she can choose to accept or reject the TOS.",},{"id":"jbossdeveloper_quickstart-61dae11c","label":"picketlink-federation-saml-idp-with-metadata","title":"picketlink-federation-saml-idp-with-metadata: PicketLink Identity Provider With a Basic Configuration","description":"Basic example that demonstrates how to setup an application as a SAML v2.0 Identity Provider.",},{"id":"jbossdeveloper_quickstart-2cd253ef","label":"picketlink-federation-saml-sp-redirect-with-signature","title":"picketlink-federation-saml-sp-redirect-with-signature: PicketLink Service Provider With a Basic Configuration using SAML HTTP Redirect Binding With Signature Support","description":"Basic example that demonstrates how to setup an application as a SAML v2.0 Service Provider using SAML HTTP Redirect Binding With Signature Support.",},{"id":"jbossdeveloper_quickstart-5bc034cb","label":"picketlink-federation-saml-sp-with-metadata","title":"picketlink-federation-saml-sp-with-metadata: PicketLink Service Provider using SAML HTTP POST Binding, Digital Signature in SAML Assertions and SAML Metadata Support.","description":"Basic example that demonstrates how to setup an application as a SAML v2.0 Service Provider using SAML HTTP POST Binding, Digital Signature in SAML Assertions and SAML Metadata Support.",},{"id":"jbossdeveloper_quickstart-275eb6ce","label":"picketlink-federation-saml-idp-with-signature","title":"picketlink-federation-saml-idp-with-signature: PicketLink Identity Provider With Signature","description":"Basic example that demonstrates how to setup an application as a SAML v2.0 Identity Provider With Signature.",},{"id":"jbossdeveloper_quickstart-143b4f7e","label":"picketlink-federation-saml-idp-with-ssl","title":"picketlink-federation-saml-idp-with-ssl: PicketLink Identity Provider With SSL","description":"Basic example that demonstrates how to setup an application as a SAML v2.0 Identity Provider With SSL.",},{"id":"jbossdeveloper_quickstart-28b81935","label":"picketlink-federation-saml-sp-redirect-basic","title":"picketlink-federation-saml-sp-redirect-basic: PicketLink Service Provider With a Basic Configuration using SAML HTTP Redirect Binding","description":"Basic example that demonstrates how to setup an application as a SAML v2.0 Service Provider using SAML HTTP Redirect Binding.",},{"id":"jbossdeveloper_quickstart-c4c8dcff","label":"picketlink-federation-saml-sp-post-basic","title":"picketlink-federation-saml-sp-post-basic: PicketLink Service Provider With a Basic Configuration using SAML HTTP POST Binding","description":"Basic example that demonstrates how to setup an application as a SAML v2.0 Service Provider using SAML HTTP POST Binding.",},{"id":"jbossdeveloper_quickstart-5fcc227e","label":"picketlink-authentication-idm-multi-tenancy","title":"picketlink-authentication-idm-multi-tenancy: PicketLink Multi-Tenancy Example","description":"Basic example that demonstrates how to use multi-tenancy using PicketLink with a JSF view layer",},{"id":"jbossdeveloper_quickstart-a8450022","label":"picketlink-authentication-recaptcha","title":"picketlink-authentication-recaptcha: PicketLink Authentication using reCAPTCHA","description":"Basic example that demonstrates how to use reCAPTCHA with PicketLink",},{"id":"jbossdeveloper_quickstart-a8528069","label":"picketlink-authentication-two-factor","title":"picketlink-authentication-two-factor: PicketLink Two-Factor Authentication","description":"Basic example that demonstrates how to use two-factor authentication using Time-based One-Time Passwords(TOTP) with a JSF view layer",},{"id":"jbossdeveloper_quickstart-173c4ab4","label":"picketlink-authorization-acl","title":"picketlink-authorization-acl: PicketLink IDM Authorization Example using ACLs","description":"Basic example that demonstrates IDM-based authorization using the Permissions API to implement ACL-based resource restrictions",},{"id":"jbossdeveloper_quickstart-f3ad9c7c","label":"picketlink-authentication-http-basic","title":"picketlink-authentication-http-basic: PicketLink HTTP Basic Authentication","description":"Basic example that demonstrates simple username/password authentication using the HTTP Basic scheme with a JSF view layer",},{"id":"jbossdeveloper_quickstart-d3fee1de","label":"picketlink-authorization-idm-jpa","title":"picketlink-authorization-idm-jpa: PicketLink IDM Authorization Example using JPA","description":"Basic example that demonstrates IDM-based authorization using a JPA-based PicketLink IDM configuration",},{"id":"jbossdeveloper_quickstart-f49eceb1","label":"picketlink-authorization-idm-jpa-with-subsystem","title":"picketlink-authorization-idm-jpa-with-subsystem: PicketLink IDM Authorization Example using JPA","description":"Basic example that demonstrates IDM-based authorization using configuration from IDM subsystem.",},{"id":"jbossdeveloper_quickstart-060ce1ed","label":"picketlink-authorization-drools","title":"picketlink-authorization-drools: PicketLink IDM Authorization Example using Drools","description":"Basic example that demonstrates IDM-based authorization using Drools to implement temporal-based security restrictions",},{"id":"jbossdeveloper_quickstart-7ad32379","label":"picketlink-authentication-jsf","title":"picketlink-authentication-jsf: PicketLink Authentication with JSF","description":"Basic example that demonstrates simple username/password authentication using PicketLink",},{"id":"jbossdeveloper_quickstart-d54c5a08","label":"picketlink-authentication-security-level","title":"picketlink-authentication-security-level: PicketLink Security Level Authentication and Authorization","description":"Basic example that demonstrates how to use assign security levels to your users and protect resources based on levels",},{"id":"jbossdeveloper_quickstart-bc5f0574","label":"picketlink-federation-saml-sp-with-servlet-filter","title":"picketlink-federation-saml-sp-with-servlet-filter: PicketLink Service Provider With a Basic Configuration using a standard JEE Servlet Filter","description":"Basic example that demonstrates how to setup an application as a SAML v2.0 Service Provider using a standard JEE Servlet Filter.",},{"id":"jbossdeveloper_quickstart-e0ff4029","label":"picketlink-deltaspike-authorization","title":"picketlink-deltaspike-authorization: Demonstrate the creation of a custom authorization example using PicketLink in conjunction with @SecurityBindingType from DeltaSpike","description":"Demonstrate the creation of a custom authorization example using PicketLink and @SecurityBindingType from DeltaSpike",},{"id":"jbossdeveloper_quickstart-0b018d68","label":"picketlink-authorization-rs-rbac","title":"picketlink-authorization-rs-rbac: PicketLink Role-based Access Control(RBAC) for JAX-RS Endpoints","description":"Basic example that demonstrates how to use RBAC to your JAX-RS Endpoints",},{"id":"jbossdeveloper_quickstart-0fffab65","label":"picketlink-idm-custom-identity-model","title":"picketlink-idm-custom-identity-model: PicketLink Custom Identity Model","description":"An example about how to extends PicketLink IDM to provide your own Identity Model",},{"id":"jbossdeveloper_quickstart-9836b07a","label":"picketlink-federation-saml-dynamic-idp-resolution","title":"picketlink-federation-saml-dynamic-idp-resolution: PicketLink Federation SAML Dynamic IdP Resolution","description":"Demonstrates how to write a custom handler to dynamically choose the Identity Provider for a given Service Provider",},{"id":"jbossdeveloper_quickstart-2fa05f0f","label":"picketlink-authorization-idm-ldap","title":"picketlink-authorization-idm-ldap: PicketLink IDM Authorization using LDAP","description":"Basic example that demonstrates IDM-based authorization using a LDAP-based PicketLink IDM configuration",},{"id":"jbossdeveloper_quickstart-35458441","label":"picketlink-authentication-idm-jsf","title":"picketlink-authentication-idm-jsf: PicketLink IDM Simple Authentication with JSF","description":"Basic example that demonstrates simple username/password authentication using a default PicketLink IDM configuration with a JSF view layer",},{"id":"jbossdeveloper_quickstart-df1c6fe2","label":"jsf2-hello-world-portlet","title":"jsf2-hello-world-portlet: JSF2 Hello World Portlet","description":"A simple portlet using JavaServer Faces 2.",},{"id":"jbossdeveloper_quickstart-9b8c90e2","label":"jsf2-rf4-hello-world-portlet","title":"jsf2-rf4-hello-world-portlet: JSF2+RF4 Hello World Portlet","description":"A simple portlet using JavaServer Faces 2.1 and RichFaces 4.2.",},{"id":"jbossdeveloper_quickstart-08962839","label":"portal-extension","title":"portal-extension: Portal Extension","description":"Portal Extension",},{"id":"jbossdeveloper_quickstart-631acca9","label":"cdi-jsf-portlet","title":"cdi-jsf-portlet: CDI Portlet with JSF","description":"An application that demonstrates use of JSF 2 RI and CDI in a portlet",},{"id":"jbossdeveloper_quickstart-12cc3bdb","label":"social-portlets","title":"social-portlets: Social Portlets","description":"Portlets showing integration with Social networks",},{"id":"jbossdeveloper_quickstart-f227ffaf","label":"navigation-api-portlet","title":"navigation-api-portlet: Navigation API Portlet","description":"The simple navigation portlet using Portal API.",},{"id":"jbossdeveloper_quickstart-4118a797","label":"simplest-hello-world-portlet","title":"simplest-hello-world-portlet: Simplest Hello World Portlet","description":"The very essence of every possible portlet.",},{"id":"jbossdeveloper_quickstart-be59d1c3","label":"picketlink-federation-saml-sp-with-encryption","title":"picketlink-federation-saml-sp-with-encryption: PicketLink Service Provider With a Basic Configuration using SAML HTTP POST Binding With Encryption Support","description":"Basic example that demonstrates how to setup an application as a SAML v2.0 Service Provider using SAML HTTP POST Binding with Signature Support.",},{"id":"jbossdeveloper_quickstart-c8955414","label":"picketlink-federation-saml-idp-servlet-filter","title":"picketlink-federation-saml-idp-servlet-filter: PicketLink Identity Provider Using a Servlet Filter","description":"Basic example that demonstrates how to setup an application as a SAML v2.0 Identity Provider Using a Servlet Filter.",},{"id":"jbossdeveloper_quickstart-360b6c92","label":"picketlink-authentication-http-client-cert","title":"picketlink-authentication-http-client-cert: PicketLink HTTP CLIENT-CERT Authentication","description":"Basic example that demonstrates simple username/password authentication using the HTTP CLIENT-CERT scheme",},{"id":"jbossdeveloper_quickstart-5301ffa5","label":"picketlink-federation-saml-sp-idp-chooser","title":"picketlink-federation-saml-sp-idp-chooser: PicketLink Service Provider that allow users to choose between IdPs","description":"Basic example that demonstrates how to setup an application as a SAML v2.0 Service Provider using SAML HTTP POST Binding with Signature Support.",},{"id":"jbossdeveloper_quickstart-12b634bf","label":"picketlink-federation-saml-sp-post-with-ssl","title":"picketlink-federation-saml-sp-post-with-ssl: PicketLink Service Provider With a Basic Configuration using SAML HTTP POST Binding With Signature Support","description":"Basic example that demonstrates how to setup an application as a SAML v2.0 Service Provider using SAML HTTP POST Binding with Signature Support.",},{"id":"jbossdeveloper_quickstart-35dc8ea6","label":"picketlink-authentication-twitter","title":"picketlink-authentication-twitter: PicketLink Authentication with Twitter login","description":"Basic example that demonstrates Twitter authentication using PicketLink",},{"id":"jbossdeveloper_quickstart-324ca2d0","label":"picketlink-levels-complex","title":"picketlink-levels-complex: PicketLink Authentication with JSF","description":"Example that demonstrates complex usage of security-levels in PicketLink",},{"id":"jbossdeveloper_quickstart-ff93a773","label":"picketlink-authentication-form","title":"picketlink-authentication-form: PicketLink HTTP FORM Authentication","description":"Basic example that demonstrates simple username/password authentication using the FORM Authentication with a JSF view layer",},{"id":"jbossdeveloper_quickstart-15b2f521","label":"picketlink-authentication-http-digest","title":"picketlink-authentication-http-digest: PicketLink HTTP Digest Authentication","description":"Basic example that demonstrates simple username/password authentication using the HTTP Digest scheme with a JSF view layer",},{"id":"jbossdeveloper_quickstart-ef1b4241","label":"picketlink-authentication-rs-endpoint","title":"picketlink-authentication-rs-endpoint: PicketLink JAX-RS Authentication Endpoint","description":"Basic example that demonstrates how to create a JAX-RS Authentication Endpoint using PicketLink",},{"id":"jbossdeveloper_quickstart-6e697c7b","label":"picketlink-http-servlet-integration","title":"picketlink-http-servlet-integration: PicketLink HTTP Servlet Integration","description":"Basic example that demonstrates PicketLink and Java Servlet API integration",},{"id":"jbossdeveloper_quickstart-d84b7cf6","label":"cdi-generic-portlet","title":"cdi-generic-portlet: CDI Generic Portlet","description":"An application that demonstrates use of CDI in a portlet.",},{"id":"jbossdeveloper_quickstart-3856f9c6","label":"sample-portal","title":"sample-portal: Sample Portal","description":"Sample Portal",},{"id":"jbossdeveloper_quickstart-a7952862","label":"cdi-scopes-portlet","title":"cdi-scopes-portlet: Portlet Using Portet-Specific CDI Scopes","description":"Portlet Using Portal-Specific CDI Scopes @PortletLifecycleScoped and @PortletRedisplayScoped.",},{"id":"jbossdeveloper_quickstart-8fd4874c","label":"carmart","title":"carmart: Basic Infinispan example","description":"Shows how to use Infinispan instead of a relational database.",},{"id":"jbossdeveloper_quickstart-68e8e6b4","label":"helloworld-jdg","title":"helloworld-jdg: Basic Infinispan example","description":"Shows how to use Infinispan in clustered mode, with expiration enabled.",},{"id":"jbossdeveloper_quickstart-3a9a97ee","label":"rest-endpoint","title":"rest-endpoint: Use JDG remotely through REST","description":"Demonstrates how to use Infinispan remotely using the REST protocol.",},{"id":"jbossdeveloper_quickstart-7fcb74c5","label":"remote-query","title":"remote-query: Use JDG remotely through Hotrod","description":"Demonstrates how to query Infinispan remotely using the Hot Rod client.",},{"id":"jbossdeveloper_quickstart-b8778fb4","label":"rhq-client-ejb","title":"rhq-client-ejb: Remote JAVA API example - EJB Client","description":"Demonstrates how can be interacted with JBoss ON using remote EJB",},{"id":"jbossdeveloper_quickstart-c0fab88e","label":"rhq-client-cli","title":"rhq-client-cli: Remote JAVA API example - CLI Client","description":"Demonstrates how can be interacted with JBoss ON using RemoteClient",},{"id":"jbossdeveloper_quickstart-599d32a7","label":"spring-resteasy","title":"spring-resteasy: Example Using Resteasy Spring Integration","description":"The `spring-resteasy` quickstart demonstrates how to package and deploy a web application that includes resteasy-spring integration.",},{"id":"jbossdeveloper_quickstart-dea2a032","label":"spring-kitchensink-basic","title":"spring-kitchensink-basic: Kitchensink Example using Spring 4.x","description":"The `spring-kitchensink-basic` quickstart is an example of a Java EE 6 application using JSP, JPA 2.0 and Spring 4.x.",},{"id":"jbossdeveloper_quickstart-bb74fada","label":"deltaspike-partialbean-advanced","title":"deltaspike-partialbean-advanced: Advanced Example of DeltaSpike's Partial Bean API","description":"The `deltaspike-partialbean-advanced` quickstart demonstrates how to use a partial bean to provide a dynamic implementation of a generic query service.",},{"id":"jbossdeveloper_quickstart-783e0c45","label":"kitchensink-deltaspike","title":"kitchensink-deltaspike: Example Using the DeltaSpike @Transactional Annotation","description":"The `kitchensink-deltaspike` quickstart demonstrates how to give transacational behavior to a CDI bean using the Deltaspike @Transactional Annotation.",},{"id":"jbossdeveloper_quickstart-7e091cec","label":"kitchensink-rf","title":"kitchensink-rf: Kitchensink With a JSF Richfaces Front End","description":"The `kitchensink-rf` quickstart demonstrates a Java EE 6 application using JSF 2.1 with Richfaces 4.5, CDI 1.0, EJB 3.1, JPA 2.0 and Bean Validation 1.0.",},{"id":"jbossdeveloper_quickstart-2f2eddae","label":"cdi-add-interceptor-binding","title":"cdi-add-interceptor-binding: CDI Interceptor Binding Portable Extension Example","description":"The `cdi-add-interceptor-binding` quickstart demonstrates how to create a simple CDI extension to automatically add an interceptor binding to a class.",},{"id":"jbossdeveloper_quickstart-bc80191d","label":"kitchensink-cordova","title":"kitchensink-cordova: Mobile Hybrid HTML5, REST, and Apache Cordova Example","description":"The `kitchensink-cordova` quickstart is an example of a hybrid Apache Cordova application using HTML5 and jQuery Mobile.",},{"id":"jbossdeveloper_quickstart-2d79202a","label":"helloworld-html5","title":"helloworld-html5: HTML5 and REST Hello World Example","description":"The `helloworld-html5` quickstart demonstrates the use of *CDI 1.0* and *JAX-RS* using the HTML5 architecture and RESTful services on the backend.",},{"id":"jbossdeveloper_quickstart-8e718cc0","label":"deltaspike-helloworld-jms","title":"deltaspike-helloworld-jms: HelloWorld JMS Using DeltaSpike Configuration Properties","description":"The `deltaspike-helloworld-jms` quickstart demonstrates how to create JMS clients using DeltaSpike configuration properties.",},{"id":"jbossdeveloper_quickstart-860805f5","label":"spring-petclinic","title":"spring-petclinic: PetClinic Example using Spring 4.x","description":"The `spring-petclinic` quickstart shows how to run the Spring PetClinic Application in JBoss EAP using the JBoss EAP and WFK BOMs.",},{"id":"jbossdeveloper_quickstart-56b659aa","label":"spring-kitchensink-asyncrequestmapping","title":"spring-kitchensink-asyncrequestmapping: Kitchensink AsynRequestMapping Using Spring 4.x","description":"The `spring-kitchensink-asyncrequestmapping` quickstart showcases the use of asynchronous requests is an example using JSP, JPA 2.0 and Spring 4.x.",},{"id":"jbossdeveloper_quickstart-e5b5b803","label":"deltaspike-deactivatable","title":"deltaspike-deactivatable: Example Using DeltaSpike Deactivatable","description":"The `deltaspike-deactivatable` quickstart demonstrates how to use DeltaSpike `ClassDeactivator` to manually deactivate artifacts.",},{"id":"jbossdeveloper_quickstart-a3eaaa3f","label":"kitchensink-backbone","title":"kitchensink-backbone: Example Using Backbone.js with JAX-RS and Java EE","description":"The `kitchensink-backbone` quickstart demonstrates how to use Backbone.js, JAX-RS, CDI 1.0, EJB 3.1, JPA 2.0 and Bean Validation 1.0 in an application.",},{"id":"jbossdeveloper_quickstart-70d93f88","label":"spring-greeter","title":"spring-greeter: Greeter Example using Spring 4.x","description":"The `spring-greeter` quickstart is based on the `greeter` quickstart, but differs in that it uses Spring MVC for Mapping GET and POST requests.",},{"id":"jbossdeveloper_quickstart-276c5598","label":"deltaspike-projectstage","title":"deltaspike-projectstage: Usage of DeltaSpike Project Stage Conditional @Exclude","description":"The `deltaspike-projectstage` quickstart shows how to use DeltaSpike project stage to customize the implementation based on the deployment environment.",},{"id":"jbossdeveloper_quickstart-a5d2dcc9","label":"deltaspike-exception-handling","title":"deltaspike-exception-handling: An Example Showing DeltaSpike Exception Handling","description":"The `deltaspike-exception-handling` quickstart demonstrates exception handling using the DeltaSpike library, which is based on the CDI eventing model.",},{"id":"jbossdeveloper_quickstart-7c0155d0","label":"kitchensink-cordova-contacts","title":"kitchensink-cordova-contacts: Apache Cordova Contacts Mobile HTML5 and REST Example","description":"The `kitchensink-cordova-contacts` quickstart is an example of a hybrid Apache Cordova Contacts API application using HTML5 and jQuery Mobile.",},{"id":"jbossdeveloper_quickstart-c493d592","label":"deltaspike-authorization","title":"deltaspike-authorization: DeltaSpike @SecurityBindingType Custom Authorization","description":"The `deltaspike-authorization` quickstart demonstrates the creation of a custom authorization example using @SecurityBindingType from DeltaSpike.",},{"id":"jbossdeveloper_quickstart-5a516a1d","label":"helloworld-gwt","title":"helloworld-gwt: Helloworld with a Google Web Toolkit (GWT) Front End","description":"The `helloword-gwt` quickstart demonstrates CDI 1.0, JAX-RS, and backend RESTful services with a Google Web Toolkit (GWT) front-end client.",},{"id":"jbossdeveloper_quickstart-ef564f27","label":"kitchensink-angularjs","title":"kitchensink-angularjs: Demonstrates AngularJS with JAX-RS","description":"The `kitchensink-angularjs` quickstart demonstrates a Java EE 6 application using AngularJS with JAX-RS, CDI, EJB 3.1, JPA 2.0 and Bean Validation 1.0.",},{"id":"jbossdeveloper_quickstart-61dc56ef","label":"spring-kitchensink-controlleradvice","title":"spring-kitchensink-controlleradvice: Kitchensink ControllerAdvice Example using Spring 4.x","description":"The `spring-kitchensink-controlleradvice` quickstart showcases Spring 4.x's `@ControllerAdvice`, which was introduced in Spring 3.2.",},{"id":"jbossdeveloper_quickstart-bd355d58","label":"spring-kitchensink-matrixvariables","title":"spring-kitchensink-matrixvariables: Kitchensink MatrixVariables Using Spring 4.x","description":"The `spring-kitchensink-matrixvariables` quickstart showcases Spring 4.x's support for **Matrix Variables** in URLs that was introduced in Spring 3.2.",},{"id":"jbossdeveloper_quickstart-d0f1436a","label":"kitchensink-html5-mobile","title":"kitchensink-html5-mobile: More Complex Example of HTML5, Mobile and JAX-RS","description":"The `kitchensink-html5-mobile` quickstart is based on `kitchensink`, but uses HTML5 and jQuery Mobile, making it suitable for mobile and tablet computers.",},{"id":"jbossdeveloper_quickstart-36a8ce88","label":"deltaspike-beanmanagerprovider","title":"deltaspike-beanmanagerprovider: Example Using DeltaSpike BeanManagerProvider","description":"The `deltaspike-beanmanagerprovider` quickstart demonstrates the use of DeltaSpike's BeanManagerProvider to access CDI in a EntityListener.",},{"id":"jbossdeveloper_quickstart-c768764f","label":"kitchensink-angularjs-bootstrap","title":"kitchensink-angularjs-bootstrap: Demonstrates AngularJS, Twitter Bootstrap, with JAX-RS","description":"The `kitchensink-angularjs-bootstrap` quickstart shows how to use AngularJS and Twitter Bootstrap with JAX-RS and Java EE.",},{"id":"jbossdeveloper_quickstart-7c0ea3ce","label":"ejb-security-plus","title":"ejb-security-plus:  Using client and server side interceptors to supply additional information for authentication before EJB calls.","description":"Demonstrates how interceptors can be used to supply additional information to be used for authentication before EJB calls.",},{"id":"jbossdeveloper_quickstart-969c5efd","label":"ejb-security-propagation","title":"ejb-security-propagation: EJB security propagation across servers","description":"Security context propagation between JBoss server instances, when using EJB calls.",},{"id":"jbossdeveloper_quickstart-b97ebb81","label":"jms","title":"jms: demonstrates how to connect to the local ActiveMQ broker and use JMS messaging between two Camel routes","description":"Demonstrates how to connect to the local ActiveMQ broker and use JMS messaging between two Camel routes",},{"id":"jbossdeveloper_quickstart-2c6e6e0d","label":"errors","title":"errors: demonstrates exception handling in Camel","description":"Demonstrates Exception handling in Camel",},{"id":"jbossdeveloper_quickstart-d7f9f53c","label":"eip","title":"eip: demonstrates how to combine multiple Enterprise Integration Patterns to solve integration problems","description":"Demonstrates how to combine multiple EIPs to solve integration problems",},{"id":"jbossdeveloper_quickstart-73cba9b2","label":"secure-rest","title":"secure-rest: demonstrates secure RESTful web services with CXF","description":"Demonstrates RESTful web services with CXF",},{"id":"jbossdeveloper_quickstart-76abea78","label":"rest","title":"rest: demonstrates RESTful web services with CXF","description":"Demonstrates RESTful web services with CXF",},{"id":"jbossdeveloper_quickstart-36ff6d43","label":"secure-soap","title":"secure-soap: demonstrates a secure SOAP web service with Apache CXF","description":"Demonstrates a SOAP web service with Apache CXF",},{"id":"jbossdeveloper_quickstart-178d2115","label":"helloworld-rf","title":"helloworld-rf: Helloworld with a JSF Richfaces Front End","description":"The `helloworld-rf` quickstart demonstrates how to create a Java EE 6 compliant application using JSF 2.1, CDI 1.0, and AJAX-enabled RichFaces 4.5.",},{"id":"jbossdeveloper_quickstart-fcae0327","label":"deltaspike-beanbuilder","title":"deltaspike-beanbuilder: Example Creating New Beans Using DeltaSpike Utilities","description":"The `deltaspike-beanbuilder` quickstart demonstrates a CDI Portable Extension that uses DeltaSpike utilities to create new Beans.",},{"id":"jbossdeveloper_quickstart-cc9baa76","label":"richfaces-validation","title":"richfaces-validation: RichFaces and Bean Validation","description":"The `richfaces-validation` quickstart demonstrates how to use JSF 2.1, RichFaces 4.5, CDI 1.0, JPA 2.0 and Bean Validation 1.0.",},{"id":"jbossdeveloper_quickstart-f55ec882","label":"deltaspike-partialbean-basic","title":"deltaspike-partialbean-basic: HelloWorld Example of the DeltaSpike PartialBean API","description":"The `deltaspike-partialbean-basic` quickstart shows use of an InvocationHandler and DeltaSpike to provide dynamic implementations of partial CDI bean.",},{"id":"jbossdeveloper_quickstart-8a9986c4","label":"shrinkwrap-resolver","title":"shrinkwrap-resolver: Demonstrates Usage of Shrinkwrap Resolver","description":"The `shrinkwrap-resolver` quickstart demonstrates 3 common use cases for ShrinkWrap Resolver.",},{"id":"jbossdeveloper_quickstart-0f5b329a","label":"spring-kitchensink-springmvctest","title":"spring-kitchensink-springmvctest: Kitchensink MVC Example Using Spring 4.x","description":"The  `spring-kitchensink-springmvctest` quickstart demonstrates how to create an MVC application using JSP, JPA 2.0 and Spring 4.x.",},{"id":"jbossdeveloper_quickstart-d2d63810","label":"kitchensink-angularjs-topcoat","title":"kitchensink-angularjs-topcoat: Shows how to use AngularJS and Topcoat with JAX-RS and Java EE on JBoss","description":"An example that incorporates multiple technologies",},{"id":"jbossdeveloper_quickstart-207b66b0","label":"cbr","title":"cbr: Demonstrates how to use the content-based router pattern in Camel to send a message","description":"Demonstrates how to use the content-based router (CBR)",},{"id":"jbossdeveloper_quickstart-896abd36","label":"soap","title":"soap: demonstrates a SOAP web service with Apache CXF","description":"Demonstrates a SOAP web service with Apache CXF",},{"id":"jbossdeveloper_quickstart-b0d2d813","label":"boms","title":"JBoss Sandbox BOMs","description":"",},{"id":"jbossdeveloper_quickstart-f6a61554","label":"push-contacts-mobile","title":"push-contacts-mobile: Contacts CRUD Mobile Assortment with Push Notification","description":"The `push-contacts-mobile` quickstart is a secured contacts CRUD mobile application with push notification integration with Android, Cordova and iOS.",},{"id":"jbossdeveloper_quickstart-1256495e","label":"push-helloworld-cordova","title":"Debug the Application","description":"The `push-helloworld-cordova` quickstart shows how to use the JBoss Unified Push Cordova Push plug-in to register and receive push notifications.",},{"id":"jbossdeveloper_quickstart-39316ce3","label":"push-helloworld-android","title":"push-helloworld-android: Push Helloworld Android","description":"The `push-helloworld-android` quickstart shows how to use the JBoss Unified Push Android Push plug-in to register and receive push notifications.",}]
;

$(function () {
  $search.keyup(function () {
    toggleSearch();
  });

  // Clear Text Field
  $clearSearch.on('click', function() {
    $search.val('');
    toggleSearch();
  });
});

function toggleSearch() {
  var terms = $search.val().toLowerCase();
  var searching = Boolean( terms );
  if (!searching) {
    $search.val('').focus();
  }
  performSearch(terms);
  $searchBar.toggleClass('has-feedback', searching);
  $homeDiv.toggleClass('hidden', searching );
  $results.toggleClass('hidden', !searching );
}


function performSearch(terms) {
  results = filter(terms);
  var total = results.length;
  var eltPerPage = 4;
  console.log("Found "+total+" results");
  //reset paginator
  var $paginator = $('#pagination-results');
  $paginator.empty();
  $paginator.removeData('twbs-pagination');

  if (total > eltPerPage) {
    $paginator.twbsPagination({
          totalPages: Math.ceil(total/eltPerPage),
          visiblePages: 4,
          onPageClick: function (event, page) {
              displayPage(page, eltPerPage, terms);
          }
      });
  }
  displayPage(1, eltPerPage, terms);


}

function displayPage(page, eltPerPage, terms) {
  var $list = $("#resultList");
  $list.empty();

  var total = results.length;
  var totalPages = Math.ceil(total/eltPerPage);

  var $paginator = $("#pagination-results");
  $paginator.find(".first, .prev").toggleClass('hidden', (page == 1));
  $paginator.find(".next, .last").toggleClass('hidden', (page == totalPages));


  if (total > 0) {
    var start = (page-1)*eltPerPage;
    var size = eltPerPage;
    if (page == totalPages) {
      size = eltPerPage - (totalPages*eltPerPage-results.length);
    }
    for (i=start; i< (start+size);i++) {
      var $div = result2Html(results[i]);
      $div.highlight(terms);
      $div.appendTo($list);
    }
  } else {
    $list.append("<div>No quickstarts match your criteria</div>");
  }
}

function filter(terms) {
  var filtered = [];

  var results = wizards.concat(searchResults);

  for (i=0; i< results.length; i++) {
    var result = results[i];
    if ($.inArray(result.id, blacklist) > -1) {
      continue;
    }
    if (result.id.toLowerCase().indexOf(terms) > -1) {
      filtered.push(result);
    } else if (result.description.toLowerCase().indexOf(terms) > -1) {
      filtered.push(result);
    }
  }
  return filtered;
}

// Home - Popovers
// ==========================
$(function () {
  addPopover($('.popper'));
});

function addPopover(element) {
  element.popover({
    container: 'body',
    placement: 'auto bottom',
    trigger: 'hover',
    html: true,
    content: function () {
        return $(this).next('.popper-content').html();
    }
  });
}

function result2Html(result) {
  var iconUrl = result.hasOwnProperty('iconUrl')?result.iconUrl:"images/icon-default.png";
  var isQuickstart = result.hasOwnProperty('title');
  var html = '<div href="#" class="list-group-item" ';
  if (isQuickstart) {
    html += 'data-quickstart-id="';
  } else {
    html += 'data-wizard-id="';
  }
  html += result.id+'">';
  html += '<a href="#" class="list-group-item-heading"><span class="i"><img src="'+iconUrl+'"></span>'+ result.label+ '</a>';
  html += '<p class="list-group-item-text">'+result.description+'</p></div>';
  $qsDiv = $(html);


//  $qsTemplate = $("#quickstart-template").find("div");
//  $qsDiv = $qsTemplate.clone();
//  $qsDiv.attr('data-quickstart-id', result.id);
//  $qsDiv.find("a").html('<span class="i"><span class="i-default"></span></span>'+ result.id);
//  $qsDiv.find("p").html('<p class="list-group-item-text">'+result.description+'</p>');

  return $qsDiv;
}

function loadBuzz(buzzFeed) {

  $buzz = $('#buzz');
  $buzzTemplate = $("#buzz").find("div.active").clone();
  //<div class="active item">
  //     <p>Brand new?  Try our <a href="http://www.jboss.org/ticket-monster/">TicketMonster</a> tutorial.</p>
  //</div>
  $buzzTemplate.removeClass('active');

  for (i=0; i < Math.min(10, buzzFeed.length); i++) {
    try {
      var f = buzzFeed[i];
      var $buzzDiv = $buzzTemplate.clone();
      //beware of html injection
      var content = '<p><a href="'+f.link+'" class="external">'+f.description+'</a><p>';
      $buzzDiv.html(content);
      $buzzDiv.appendTo($buzz);
    } catch(O_o) {
      console.log("Error loading buzz :"+O_o.message);
    }

  }
  $('#buzz-carousel').carousel({
    interval: 3500
  });
  //alert("buzz loaded");
}

function loadWizards(data) {
  wizards = data;
  var template = '<div class="col-md-3 col-sm-6 col-xs-6"><div class="list-group">'
            +   '<div class="list-group-item" data-wizard-id="@id@">'
            +     '<a href="#" class="list-group-item-heading popper" data-toggle="popover"><span class="i"><img src="@iconUrl@"></span>@title@</a>'
            +     '<div class="popper-content">'
            +       '<h4><img src="@iconUrl@">@title@</h4>'
            +       '<p>@description@</p>'
            +     '</div>'
            +   '</div>'
            +'</div></div>';

  $wizards = $("#wizards .row");
  $wizards.empty();
  for (i=0; i < data.length; i++) {
    var w = data[i];
    var html = replaceAll("@title@", w.label, template);
        html = replaceAll("@id@", w.id, html);
        html = replaceAll("@iconUrl@", w.iconUrl, html);
        html = replaceAll("@description@", w.description, html);
    var $wizard = $(html);
    addPopover($wizard.find(".popper"));
    $wizard.appendTo($wizards);
  }

}

function replaceAll(find, replace, str) {
  return str.replace(new RegExp(find, 'g'), replace);
}

function loadQuickstarts(data) {
  searchResults = data;
}

function registerQuickstartClicks() {
  $(document).on("click", "a.list-group-item-heading", function(e) {
    e.preventDefault();
    $(this).popover('hide');

    var id = $(this).parent().data("quickstart-id");
    if (typeof id != 'undefined') {
      delegateToIDE('quickstart', id);
    } else {
      id = $(this).parent().data("wizard-id");
      delegateToIDE('wizard', id);
    }

  });
}

function registerButtonClicks() {
  $("#addtools").on("click", function(e) {
    e.preventDefault();
    delegateToIDE('openpage', 'org.jboss.tools.central.editors.SoftwarePage');
  });
  if (typeof openInIDE == 'function' ){
    $(document).on("click", "a.external", function(e) {
      e.preventDefault();
      var href = $(this).attr('href');
      delegateToIDE('openlink', href);
    });
  }
}

function toggleEarlyAccess(enabled) {
  if (enabled) {
    $("#earlyaccess").show();
  } else {
    $("#earlyaccess").hide();
  }

}


function delegateToIDE(type, data) {
  if (typeof openInIDE == 'function' ){
    openInIDE(type, data);
  } else {
    alert(type + " : "+ data);
  }
}
// ==========================
$(document).ready(function() {
  //register events per html elements
  //registerProxyWizardClicks();
  registerQuickstartClicks();
  registerButtonClicks();
  //load elements from IDE
  if (typeof initialize == 'function' ){
    initialize();
  } else {
    loadWizards(wizards);
  }
  
  $('#search-form').submit (function() {return false;});
  
});
